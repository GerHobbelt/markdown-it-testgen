{"version":3,"file":"markdownTestGen.umd.js","sources":["../index.js"],"sourcesContent":["\nlet fs      = require('fs');\nlet p       = require('path');\n\nlet yaml    = require('js-yaml');\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj)   { return _class(obj) === '[object String]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\nfunction isArray(obj)    { return _class(obj) === '[object Array]'; }\n\n\nfunction fixLF(str) {\n  return str.length ? str + '\\n' : str;\n}\n\nfunction parse(input, options) {\n  let lines = input.split(/\\r?\\n/g),\n      max = lines.length,\n      min = 0,\n      line = 0,\n      fixture, i, l, currentSep, blockStart;\n\n  let result = {\n    fixtures: []\n  };\n\n  let sep = options.sep || [ '.' ];\n\n  // Try to parse meta\n  if (/^-{3,}$/.test(lines[0] || '')) {\n    line++;\n    while (line < max && !/^-{3,}$/.test(lines[line])) { line++; }\n\n    // If meta end found - extract range\n    if (line < max) {\n      result.meta = lines.slice(1, line).join('\\n');\n      line++;\n      min = line;\n\n    } else {\n      // if no meta closing - reset to start and try to parse data without meta\n      line = 1;\n    }\n  }\n\n  // Scan fixtures\n  while (line < max) {\n    if (sep.indexOf(lines[line]) < 0) {\n      line++;\n      continue;\n    }\n\n    currentSep = lines[line];\n\n    fixture = {\n      type: currentSep,\n      header: '',\n      first: {\n        text: '',\n        range: []\n      },\n      second: {\n        text: '',\n        range: []\n      }\n    };\n\n    line++;\n    blockStart = line;\n\n    // seek end of first block\n    while (line < max && lines[line] !== currentSep) { line++; }\n    if (line >= max) { break; }\n\n    fixture.first.text = fixLF(lines.slice(blockStart, line).join('\\n'));\n    fixture.first.range.push(blockStart, line);\n    line++;\n    blockStart = line;\n\n    // seek end of second block\n    while (line < max && lines[line] !== currentSep) { line++; }\n    if (line >= max) { break; }\n\n    fixture.second.text = fixLF(lines.slice(blockStart, line).join('\\n'));\n    fixture.second.range.push(blockStart, line);\n    line++;\n\n    // Look back for header on 2 lines before texture blocks\n    i = fixture.first.range[0] - 2;\n    while (i >= Math.max(min, fixture.first.range[0] - 3)) {\n      l = lines[i];\n      if (sep.indexOf(l) >= 0) { break; }\n      if (l.trim().length) {\n        fixture.header = l.trim();\n        break;\n      }\n      i--;\n    }\n\n    result.fixtures.push(fixture);\n  }\n\n  return (result.meta || result.fixtures.length) ? result : null;\n}\n\n\n// Read fixtures recursively, and run iterator on parsed content\n//\n// Options\n//\n// - sep (String|Array) - allowed fixture separator(s)\n//\n// Parsed data fields:\n//\n// - file (String): file name\n// - meta (Mixed):  metadata from header, if exists\n// - fixtures\n//\nfunction load(path, options, iterator) {\n  let input, parsed,\n      stat = fs.statSync(path);\n\n  if (isFunction(options)) {\n    iterator = options;\n    options = { sep: [ '.' ] };\n  } else if (isString(options)) {\n    options = { sep: options.split('') };\n  } else if (isArray(options)) {\n    options = { sep: options };\n  }\n\n  if (stat.isFile()) {\n    input = fs.readFileSync(path, 'utf8');\n\n    parsed = parse(input, options);\n\n    if (!parsed) { return null; }\n\n    parsed.file = path;\n    try {\n      parsed.meta = yaml.safeLoad(parsed.meta || '');\n    } catch (__) {\n      parsed.meta = null;\n    }\n    console.log('parsed.meta = ', { meta: parsed.meta });\n\n    if (iterator) {\n      iterator(parsed);\n    }\n    return parsed;\n  }\n\n  let result, res;\n  if (stat.isDirectory()) {\n    result = [];\n\n    fs.readdirSync(path).forEach(function (name) {\n      res = load(p.join(path, name), options, iterator);\n      if (Array.isArray(res)) {\n        result = result.concat(res);\n      } else if (res) {\n        result.push(res);\n      }\n    });\n\n    return result;\n  }\n\n  // Silently other entries (symlinks and so on)\n  return null;\n}\n\nfunction generate(path, options, md, env, meta_overrides) {\n  if (!md) {\n    md = options;\n    options = {};\n  }\n\n  env = env || {};\n\n  options = Object.assign({}, options);\n  options.assert = options.assert || require('assert');\n\n  load(path, options, function (data) {\n    data.meta = Object.assign({}, data.meta, meta_overrides);\n    console.log('data.meta = ', { data: data.meta, meta_overrides });\n\n    let desc = data.meta.desc || p.relative(path, data.file);\n    options.assert.strictEqual(typeof desc, 'string', 'every test series is expected to come with a decent title');\n    options.assert(desc.length > 0, 'every test series is expected to come with a decent *non-empty* title');\n\n    (data.meta.skip ? describe.skip : describe)(desc, function () {\n      data.fixtures.forEach(function (fixture) {\n        it(fixture.header && options.header ? fixture.header : 'line ' + (fixture.first.range[0] - 1), function () {\n          options.assert.strictEqual(md.render(fixture.first.text, Object.assign({}, env)), fixture.second.text);\n        });\n      });\n    });\n  });\n}\n\nmodule.exports = generate;\nmodule.exports.load = load;\n"],"names":["fs","require","p","yaml","_class","obj","Object","prototype","toString","call","isString","isFunction","isArray","fixLF","str","length","parse","input","options","lines","split","max","min","line","fixture","i","l","currentSep","blockStart","result","fixtures","sep","test","meta","slice","join","indexOf","type","header","first","text","range","second","push","Math","trim","load","path","iterator","parsed","stat","statSync","isFile","readFileSync","file","safeLoad","__","console","log","res","isDirectory","readdirSync","forEach","name","Array","concat","generate","md","env","meta_overrides","assign","assert","data","desc","relative","strictEqual","skip","describe","it","render","module","exports"],"mappings":"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"}